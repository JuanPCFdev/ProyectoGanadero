// Generated by view binder compiler. Do not edit!
package com.jpdev.proyectoganadero.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jpdev.proyectoganadero.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnChangePassword;

  @NonNull
  public final Button btnEditInfo;

  @NonNull
  public final Button btnGoToHome;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPhone;

  @NonNull
  public final TextView tvUserName;

  private ActivityUserBinding(@NonNull LinearLayout rootView, @NonNull Button btnChangePassword,
      @NonNull Button btnEditInfo, @NonNull Button btnGoToHome, @NonNull TextView tvName,
      @NonNull TextView tvPhone, @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.btnChangePassword = btnChangePassword;
    this.btnEditInfo = btnEditInfo;
    this.btnGoToHome = btnGoToHome;
    this.tvName = tvName;
    this.tvPhone = tvPhone;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChangePassword;
      Button btnChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.btnEditInfo;
      Button btnEditInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnEditInfo == null) {
        break missingId;
      }

      id = R.id.btnGoToHome;
      Button btnGoToHome = ViewBindings.findChildViewById(rootView, id);
      if (btnGoToHome == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvPhone;
      TextView tvPhone = ViewBindings.findChildViewById(rootView, id);
      if (tvPhone == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new ActivityUserBinding((LinearLayout) rootView, btnChangePassword, btnEditInfo,
          btnGoToHome, tvName, tvPhone, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
