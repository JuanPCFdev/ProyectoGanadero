// Generated by view binder compiler. Do not edit!
package com.jpdev.proyectoganadero.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jpdev.proyectoganadero.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySellCowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView card;

  @NonNull
  public final EditText etMarcacion;

  @NonNull
  public final EditText etNombreProveedor;

  @NonNull
  public final EditText etPeso;

  @NonNull
  public final EditText etPrecioVenta;

  @NonNull
  public final EditText etRaza;

  @NonNull
  public final EditText etTelProveedor;

  @NonNull
  public final TextView title;

  private ActivitySellCowBinding(@NonNull ConstraintLayout rootView, @NonNull CardView card,
      @NonNull EditText etMarcacion, @NonNull EditText etNombreProveedor, @NonNull EditText etPeso,
      @NonNull EditText etPrecioVenta, @NonNull EditText etRaza, @NonNull EditText etTelProveedor,
      @NonNull TextView title) {
    this.rootView = rootView;
    this.card = card;
    this.etMarcacion = etMarcacion;
    this.etNombreProveedor = etNombreProveedor;
    this.etPeso = etPeso;
    this.etPrecioVenta = etPrecioVenta;
    this.etRaza = etRaza;
    this.etTelProveedor = etTelProveedor;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySellCowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySellCowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sell_cow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySellCowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.etMarcacion;
      EditText etMarcacion = ViewBindings.findChildViewById(rootView, id);
      if (etMarcacion == null) {
        break missingId;
      }

      id = R.id.etNombreProveedor;
      EditText etNombreProveedor = ViewBindings.findChildViewById(rootView, id);
      if (etNombreProveedor == null) {
        break missingId;
      }

      id = R.id.etPeso;
      EditText etPeso = ViewBindings.findChildViewById(rootView, id);
      if (etPeso == null) {
        break missingId;
      }

      id = R.id.etPrecioVenta;
      EditText etPrecioVenta = ViewBindings.findChildViewById(rootView, id);
      if (etPrecioVenta == null) {
        break missingId;
      }

      id = R.id.etRaza;
      EditText etRaza = ViewBindings.findChildViewById(rootView, id);
      if (etRaza == null) {
        break missingId;
      }

      id = R.id.etTelProveedor;
      EditText etTelProveedor = ViewBindings.findChildViewById(rootView, id);
      if (etTelProveedor == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivitySellCowBinding((ConstraintLayout) rootView, card, etMarcacion,
          etNombreProveedor, etPeso, etPrecioVenta, etRaza, etTelProveedor, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
