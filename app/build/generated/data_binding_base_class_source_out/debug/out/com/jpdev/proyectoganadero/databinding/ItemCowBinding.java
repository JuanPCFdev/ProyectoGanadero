// Generated by view binder compiler. Do not edit!
package com.jpdev.proyectoganadero.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jpdev.proyectoganadero.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView consult;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final ImageView edit;

  @NonNull
  public final TextView tvGender;

  @NonNull
  public final TextView tvMarking;

  @NonNull
  public final TextView tvWeight;

  private ItemCowBinding(@NonNull CardView rootView, @NonNull ImageView consult,
      @NonNull ImageView delete, @NonNull ImageView edit, @NonNull TextView tvGender,
      @NonNull TextView tvMarking, @NonNull TextView tvWeight) {
    this.rootView = rootView;
    this.consult = consult;
    this.delete = delete;
    this.edit = edit;
    this.tvGender = tvGender;
    this.tvMarking = tvMarking;
    this.tvWeight = tvWeight;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.consult;
      ImageView consult = ViewBindings.findChildViewById(rootView, id);
      if (consult == null) {
        break missingId;
      }

      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.edit;
      ImageView edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.tvGender;
      TextView tvGender = ViewBindings.findChildViewById(rootView, id);
      if (tvGender == null) {
        break missingId;
      }

      id = R.id.tvMarking;
      TextView tvMarking = ViewBindings.findChildViewById(rootView, id);
      if (tvMarking == null) {
        break missingId;
      }

      id = R.id.tvWeight;
      TextView tvWeight = ViewBindings.findChildViewById(rootView, id);
      if (tvWeight == null) {
        break missingId;
      }

      return new ItemCowBinding((CardView) rootView, consult, delete, edit, tvGender, tvMarking,
          tvWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
