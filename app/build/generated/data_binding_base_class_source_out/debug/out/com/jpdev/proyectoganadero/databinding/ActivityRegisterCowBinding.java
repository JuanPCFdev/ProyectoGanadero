// Generated by view binder compiler. Do not edit!
package com.jpdev.proyectoganadero.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jpdev.proyectoganadero.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterCowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnHome;

  @NonNull
  public final Button btnRegisterCow;

  @NonNull
  public final EditText etAge;

  @NonNull
  public final EditText etBirthday;

  @NonNull
  public final EditText etBreed;

  @NonNull
  public final EditText etCost;

  @NonNull
  public final EditText etGender;

  @NonNull
  public final EditText etMarking;

  @NonNull
  public final EditText etState;

  @NonNull
  public final EditText etType;

  @NonNull
  public final EditText etWeight;

  private ActivityRegisterCowBinding(@NonNull LinearLayout rootView, @NonNull Button btnHome,
      @NonNull Button btnRegisterCow, @NonNull EditText etAge, @NonNull EditText etBirthday,
      @NonNull EditText etBreed, @NonNull EditText etCost, @NonNull EditText etGender,
      @NonNull EditText etMarking, @NonNull EditText etState, @NonNull EditText etType,
      @NonNull EditText etWeight) {
    this.rootView = rootView;
    this.btnHome = btnHome;
    this.btnRegisterCow = btnRegisterCow;
    this.etAge = etAge;
    this.etBirthday = etBirthday;
    this.etBreed = etBreed;
    this.etCost = etCost;
    this.etGender = etGender;
    this.etMarking = etMarking;
    this.etState = etState;
    this.etType = etType;
    this.etWeight = etWeight;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterCowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterCowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register_cow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterCowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHome;
      Button btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btnRegisterCow;
      Button btnRegisterCow = ViewBindings.findChildViewById(rootView, id);
      if (btnRegisterCow == null) {
        break missingId;
      }

      id = R.id.etAge;
      EditText etAge = ViewBindings.findChildViewById(rootView, id);
      if (etAge == null) {
        break missingId;
      }

      id = R.id.etBirthday;
      EditText etBirthday = ViewBindings.findChildViewById(rootView, id);
      if (etBirthday == null) {
        break missingId;
      }

      id = R.id.etBreed;
      EditText etBreed = ViewBindings.findChildViewById(rootView, id);
      if (etBreed == null) {
        break missingId;
      }

      id = R.id.etCost;
      EditText etCost = ViewBindings.findChildViewById(rootView, id);
      if (etCost == null) {
        break missingId;
      }

      id = R.id.etGender;
      EditText etGender = ViewBindings.findChildViewById(rootView, id);
      if (etGender == null) {
        break missingId;
      }

      id = R.id.etMarking;
      EditText etMarking = ViewBindings.findChildViewById(rootView, id);
      if (etMarking == null) {
        break missingId;
      }

      id = R.id.etState;
      EditText etState = ViewBindings.findChildViewById(rootView, id);
      if (etState == null) {
        break missingId;
      }

      id = R.id.etType;
      EditText etType = ViewBindings.findChildViewById(rootView, id);
      if (etType == null) {
        break missingId;
      }

      id = R.id.etWeight;
      EditText etWeight = ViewBindings.findChildViewById(rootView, id);
      if (etWeight == null) {
        break missingId;
      }

      return new ActivityRegisterCowBinding((LinearLayout) rootView, btnHome, btnRegisterCow, etAge,
          etBirthday, etBreed, etCost, etGender, etMarking, etState, etType, etWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
